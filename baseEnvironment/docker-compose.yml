version: '3'
services:
  #   mysql
  #  mysql:
  #    image: mysql:latest
  #    container_name: mysql
  #    ports:
  #      - "3306:3306"
  #    restart: always
  #    environment:
  #      - MYSQL_ROOT_PASSWORD=root
  #      - TZ=Asia/Shanghai
  #    volumes:
  #      # 数据存放位置
  #      - ./mysql/data/:/var/lib/mysql/
  #      # 配置
  #      - ./mysql/conf/:/etc/mysql/conf.d/
  #      # 初始化sql脚本存放位置
  #      - ./mysql/init/:/docker-entrypoint-initdb.d/

  #  PGSQL
  #  postgres:
  #    image: postgres:alpine3.19
  #    container_name: postgres
  #    ports:
  #      - "5432:5432"
  #    restart: always
  #    environment:
  #      - POSTGRES_USER=postgres
  #      - POSTGRES_PASSWORD=postgres
  #      - TZ=Asia/Shanghai
  #    volumes:
  #      - ./postgres/data/:/var/lib/postgresql/data/
  #      - ./postgres/conf/:/etc/postgresql/
  #      - ./postgres/init/:/docker-entrypoint-initdb.d/

  #  redis
  #  redis:
  #    image: redis
  #    container_name: redis
  #    ports:
  #      - "6399:6379"
  #    restart: always
  #    environment:
  #      - TZ=Asia/Shanghai
  #      - REDIS_PASSWORD=123456
  #    volumes:
  #      - ./redis/data/:/data
  #      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
  #      - ./redis/log/:/usr/local/etc/redis/log
  #    command: redis-server /usr/local/etc/redis/redis.conf

  #  mongo:
  #    image: mongo:latest
  #    container_name: mongo
  #    ports:
  #      - "27017:27017"
  #    restart: always
  #    environment:
  #      - MONGO_INITDB_ROOT_USERNAME=root
  #      - MONGO_INITDB_ROOT_PASSWORD=root
  #      - TZ=Asia/Shanghai
  #      - MONGO_INITDB_DATABASE=admin
  #    volumes:
  #      - ./mongo/data/:/data/db
  #      - ./mongo/conf/:/data/configdb/
  #      - ./mongo/log/:/data/log/
  #      - ./mongo/init/:/docker-entrypoint-initdb.d/

  #  consul 服务注册与发现中间件
  consul:
    image: consul:1.15.4
    container_name: consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    restart: always
    volumes:
      - ./consul/config:/consul/config
      - ./consul/data:/consul/data
      - ./consul/logs:/consul/logs
    command: consul agent -server -bootstrap-expect=1 -client=0.0.0.0 -ui -bind='{{ GetPrivateIP }}' -data-dir=/consul/data -node=consul-node -datacenter=dc1 -log-level=debug -enable-script-checks=true -config-dir=/consul/config

  # rabbitmq
  #  rabbitmq:
  #    image: rabbitmq:3.8-management
  #    container_name: rabbitmq
  #    ports:
  #      - "15672:15672"
  #      - "5672:5672"
  #    restart: always
  #    environment:
  #      - RABBITMQ_DEFAULT_USER=admin
  #      - RABBITMQ_DEFAULT_PASS=admin
  #      - TZ=Asia/Shanghai
  #    volumes:
  #      - ./rabbitmq/data/:/var/lib/rabbitmq/
  #      - ./rabbitmq/logs/:/var/log/rabbitmq/log
  #      - ./rabbitmq/conf/:/etc/rabbitmq/


  # nacos
  #  nacos:
  #    image: nacos/nacos-server:latest
  #    container_name: nacos
  #    ports:
  #      - "8848:8848"
  #    restart: always
  #    environment:
  #      - NACOS_DATA_STORAGE_TYPE=mysql
  #      - MYSQL_SERVICE_HOST=mysql
  #      - MYSQL_SERVICE_DB_NAME=nacos_config
  #      - MYSQL_SERVICE_PORT=3306
  #      - MYSQL_SERVICE_USER=root
  #      - MYSQL_SERVICE_PASSWORD=root
  #      - MYSQL_DATABASE_NUM=1
  #      - JVM_XMS=512m
  #      - JVM_XMX=512m
  #      - JVM_XMN=256m
  #      - JVM_MS=128m
  #      - JVM_MMS=320m
  #    volumes:
  #      - ./nacos/logs/:/home/nacos/logs
  #    depends_on:
  #      - mysql

  # minio
  #  minio:
  #    image: minio/minio
  #    container_name: minio
  #    ports:
  #      - "9000:9000"
  #      - "9001:9001"
  #    restart: always
  #    command: minio server /data/data{1...4} --console-address ":9001"
  #    environment:
  #      - MINIO_ROOT_USER=minio
  #      - MINIO_ROOT_PASSWORD=minio123456
  #      - TZ=Asia/Shanghai
  #      - MINIO_DEFAULT_BUCKETS=public
  #      - MINIO_ACCESS_KEY=minio
  #      - MINIO_SECRET_KEY=minio123456
  #    volumes:
  #      - ./minio/data/:/data

  # envoy 网关
  #  envoy:
  #    image: envoyproxy/envoy-alpine:latest
  #    container_name: envoy
  #    ports:
  #      - "10000:10000"
  #      - "10001:10001"
  #    restart: always
  #    command: envoy -c /etc/envoy/envoy.yaml
  #    volumes:
  #      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
  #      - ./envoy/logs/:/var/log/envoy/
  #      - ./envoy/conf/:/etc/envoy/conf.d/
  #      - ./envoy/conf/bootstrap.yaml:/etc/envoy/conf.d/bootstrap.yaml
  #    depends_on:
  #      - consul

  # emqt
  #  emqx:
  #    image: emqx/emqx:5.6.0
  #    container_name: mqtt
  #    ports:
  #      - "1883:1883"
  #      - "8083:8083"
  #      - "8883:8883"
  #      - "18083:18083"
  #    restart: always
  #    environment:
  #      - EMQX_NAME=emqx
  #      - EMQX_LISTENER__TCP__EXTERNAL=1883
  #      - EMQX_LISTENER__WS__EXTERNAL=8083
  #      - EMQX_LISTENER__SSL__EXTERNAL=8883
  #      - EMQX_HTTP__LISTENER__EXTERNAL=18083
  #      - EMQX_ALLOW_ANONYMOUS=false
  #      - EMQX_ADMIN_USERNAME=admin
  #      - EMQX_ADMIN_PASSWORD=root
  #    volumes:
  #      - ./emqx/data/:/opt/emqx/data
  #      - ./emqx/log/:/opt/emqx/log
  #      - ./emqx/conf/emqx.conf:/opt/emqx/etc/emqx.conf

  # jenkins
  #  jenkins:
  #    image: jenkins/jenkins:2.419-alpine-jdk17
  #    container_name: jenkins
  #    ports:
  #      - "8080:8080"
  #    restart: always
  #      environment:
  #        - ADMIN_USERNAME=admin
  #        - ADMIN_PASSWORD=admin
  #        - JAVA_OPTS=-Duser.timezone=Asia/Shanghai
  #        - JENKINS_UC=http://mirrors.jenkins.io/

  #      volumes:
  #        - ./jenkins/data:/var/jenkins_home
  #        - ./jenkins/logs:/var/log/jenkins
  #        - ./jenkins/plugins:/var/jenkins_home/plugins

  # prometheus
#  prometheus:
#    image: prom/prometheus:main
#    container_name: prometheus
#    ports:
#      - "9090:9090"
#    restart: always
#    volumes:
#      - ./prometheus/data/:/prometheus
#      - ./prometheus/conf/prometheus.yml/:/etc/prometheus/prometheus.yml
#      - ./prometheus/logs/:/var/log/prometheus/
#      - ./prometheus/rules/:/etc/prometheus/rules/
#    depends_on:
#      - grafana
#      - prometheus-node-exporter

  # grafana/grafana
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    ports:
#      - "3000:3000"
#    restart: always
#    environment:
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#      - GF_USERS_ALLOW_SIGN_UP=false
#    volumes:
#      - ./grafana/data/:/var/lib/grafana
#      - ./grafana/logs/:/var/log/grafana

  #   prometheus-node-exporter
#  prometheus-node-exporter:
#    image: prom/node-exporter:master
#    container_name: prometheus-node-exporter
#    ports:
#      - "9100:9100"
#    restart: always

  #   mysql-exporter
#  mysql-exporter:
#    image: prom/mysqld-exporter:latest
#    container_name: mysql-exporter
#    ports:
#      - "9104:9104"
#    restart: always
#    environment:
#      #      - DATA_SOURCE_NAME=root:root@tcp(host.docker.internal:3306)
#      - DATA_SOURCE_NAME=root:root@tcp(mysql:3306)
#    volumes:
#      - ./mysql-exporter/data/:/prometheus
#      - ./mysql-exporter/logs/:/var/log/mysqld-exporter/
#      - ./mysql-exporter/conf/.my.cnf:/.my.cnf
  # pgsql-exporter
#  pgsql-exporter:
#    image: prometheuscommunity/postgres-exporter:latest
#    container_name: pgsql-exporter
#    ports:
#      - "9187:9187"
#    restart: always
#    environment:
#      - DATA_SOURCE_NAME=postgresql://postgres:687315e66ae24eeab8bb5c0441a40d79@123.6.102.119:15431/smart_power?sslmode=disable
#    volumes:
#      - ./pgsql-exporter/data/:/prometheus
#      - ./pgsql-exporter/logs/:/var/log/postgres-exporter/
#      - ./pgsql-exporter/conf/.pgpass:/.pgpass
#networks:
#  default:
#    external:
#      name: mynet